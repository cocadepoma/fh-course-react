{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/dateReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","actions/dates.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","activeDate","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","date","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","event","end","moment","toDate","start","eventAddNew","eventClearActive","eventUpdate","eventDelete","eventLoaded","checkingFinished","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","Modal","setAppElement","dateNow","minutes","seconds","add","dateNowPlus1","clone","initEvent","notes","CalendarModal","setDateStart","setDateEnd","titleValid","settitleValid","formValues","setFormValues","useEffect","trim","length","closeModal","setTimeout","isOpen","onRequestClose","contentLabel","closeTimeoutMS","momentStart","isSameOrBefore","text","icon","confirmButtonText","timer","document","querySelector","classList","focus","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","style","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","calendarEvent","onView","view","onSelectSlot","selectable","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2329ae2a.chunk.js","sourcesContent":["export const types = {\n    uiOpenModal: \"[UI] Open Modal\",\n    uiCloseModal: \"[UI] Close Modal\",\n\n    eventSetActive: \"[event] Set Active\",\n    eventStartAddNew: '[event] Start Add New',\n    eventAddNew: \"[event] Add New\",\n    eventClearActive: \"[event] Clear Active\",\n    eventUpdate: \"[event] Update\",\n    eventDelete: \"[event] Delete\",\n    eventLoaded: \"[event] Events Loaded\",\n    eventCleaner: \"[event] Cleaner\",\n\n    dateSet: \"[date] Set Date\",\n    dateClear: \"[date] Clear Date\",\n\n    authCheckingFinish: '[auth] Finish Checking login state',\n    authStartLogin: '[auth] Start Login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartTokenRenew: '[auth] Start Token Renew',\n    authLogout: '[auth] Logout',\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.authLogin:\n            return {\n                ...state,\n                checking: false,\n                ...action.payload\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n        default:\n            return state;\n    }\n\n}","\nimport { types } from \"../types/types\";\n// import moment from \"moment\"\n// {\n//     id: new Date().getTime(),\n//         title: \"Cumpleaños del jefe2\",\n//             start: moment().toDate(),\n//                 end: moment().add(2, \"hours\").toDate(),\n//                     notes: \"Comprar el pastel\",\n//                         user: {\n//         _id: \"123\",\n//             name: \"Fernando\",\n//             },\n// },\n// {\n//     id: new Date().getTime(),\n//         title: \"Reunión de Pepe\",\n//             start: moment().add(1, \"day\").toDate(),\n//                 end: moment().add(1, \"day\").add(2, \"hours\").toDate(),\n//                     notes: \"Comprar el pastel\",\n//                         user: {\n//         _id: \"123\",\n//             name: \"Fernando\",\n//             },\n// },\n\nconst initialState = {\n    events: [],\n    activeEvent: null,\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [...state.events, action.payload],\n            };\n\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload,\n            };\n\n        case types.eventClearActive:\n            return {\n                ...state,\n                activeEvent: null,\n            };\n\n        case types.eventUpdate:\n            return {\n                ...state,\n                events: state.events.map((e) => (e.id === action.payload.id ? action.payload : e)),\n            };\n\n        case types.eventDelete:\n            return {\n                ...state,\n                events: state.events.filter((e) => {\n                    return e.id !== state.activeEvent.id;\n                }),\n                activeEvent: null,\n            };\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n\n        case types.eventCleaner:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    activeDate: null,\n};\n\nexport const dateReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.dateSet:\n            return {\n                ...state,\n                activeDate: action.payload,\n            };\n        case types.dateClear:\n            return {\n                ...state,\n                activeDate: null,\n            };\n        default:\n            return state;\n    }\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true,\n            };\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false,\n            };\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { dateReducer } from \"./dateReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    date: dateReducer,\n    auth: authReducer\n    // TODO: authREducer\n    // TODO: CalendarReducer\n});\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers =\n    (typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n","\nconst baseUrl = process.env.REACT_APP_API_URL;\n\n\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`;\n\n    if (method === 'GET') {\n        return fetch(url);\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n    }\n\n}\n\nconst fetchConToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem('token') || '';\n\n    if (method === 'GET') {\n\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n\n    } else {\n\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-Type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        });\n    }\n\n}\n\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import moment from 'moment';\n\nexport const prepareEvents = (events = []) => {\n\n    return events.map((event) => ({\n        ...event,\n        end: moment(event.end).toDate(),\n        start: moment(event.start).toDate(),\n    }));\n\n}","import Swal from \"sweetalert2\";\n\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getState) => {\n\n        const { name, uid } = getState().auth\n\n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            if (body.ok) {\n\n                event.id = body.event.id;\n                event.user = {\n                    name: name,\n                    _id: uid\n                }\n\n                dispatch(eventAddNew(event));\n            }\n            console.log(body)\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event,\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event,\n});\n\nexport const eventClearActive = () => ({\n    type: types.eventClearActive,\n});\n\nexport const eventStartUpdate = (event) => {\n    return async (dispatch) => {\n        try {\n\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\n            const body = await resp.json();\n\n            if (body.ok) {\n                dispatch(eventUpdate(event));\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\n\nexport const eventUpdate = (event) => ({\n    type: types.eventUpdate,\n    payload: event,\n});\n\nexport const eventStartDeleting = () => {\n\n    return async (dispatch, getState) => {\n\n        const { activeEvent } = getState().calendar;\n        const resp = await fetchConToken(`events/${activeEvent.id}`, {}, 'DELETE');\n        const body = await resp.json();\n\n        if (body.ok) {\n            dispatch(eventDelete());\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n    }\n}\n\nconst eventDelete = () => ({\n    type: types.eventDelete,\n});\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n\n        try {\n\n            const resp = await fetchConToken('events');\n            const body = await resp.json();\n            const events = prepareEvents(body.events);\n\n\n            if (body.ok) {\n                dispatch(eventLoaded(events));\n            } else {\n                Swal.fire('Error', 'Error al obtener los eventos', 'error');\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n        console.log('>?>>>')\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n\nexport const eventCleaner = () => ({\n    type: types.eventCleaner\n});\n\n","import { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport Swal from \"sweetalert2\";\nimport { eventCleaner } from \"./events\";\n\nexport const authStartLogin = (email, password) => {\n    return async (dispatch) => {\n        const resp = await fetchSinToken(\"auth\", { email, password }, \"POST\");\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem(\"token\", body.token);\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n            dispatch(\n                login({\n                    uid: body.uid,\n                    name: body.name,\n                })\n            );\n        } else {\n            Swal.fire(\"Error\", body.msg, \"error\");\n        }\n    };\n};\n\nexport const startRegister = (email, password, name) => {\n    return async (dispatch) => {\n        const resp = await fetchSinToken(\"auth/new\", { email, password, name }, \"POST\");\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem(\"token\", body.token);\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n            dispatch(\n                login({\n                    uid: body.uid,\n                    name: body.name\n                })\n            );\n        } else {\n            Swal.fire(\"Error\", body.msg, \"error\");\n        }\n\n    };\n};\n\nexport const startChecking = () => {\n\n    return async (dispatch) => {\n\n        const resp = await fetchConToken(\"auth/renew\");\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem(\"token\", body.token);\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n            dispatch(\n                login({\n                    uid: body.uid,\n                    name: body.name\n                })\n            );\n        } else {\n            dispatch(checkingFinished());\n        }\n\n    }\n}\n\nconst checkingFinished = () => ({\n    type: types.authCheckingFinish\n});\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user,\n});\n\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(eventCleaner());\n        dispatch(logout());\n    }\n}\n\nconst logout = () => ({\n    type: types.authLogout\n});\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    };\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value,\n        });\n    };\n\n    return [values, handleInputChange, reset];\n};\n","import React from \"react\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { useDispatch } from \"react-redux\";\n\nimport \"./login.css\";\nimport { authStartLogin, startRegister } from \"../../actions/auth\";\nimport Swal from \"sweetalert2\";\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        lEmail: \"heroku@keruke.her\",\n        lPassword: \"123456\",\n    });\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        rName: 'HerokuUser',\n        rEmail: \"heroku@keruke.her\",\n        rPassword: \"123456\",\n        rPassword2: '123456'\n    });\n\n    const { lEmail, lPassword } = formLoginValues;\n    const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(authStartLogin(lEmail, lPassword));\n    };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (rPassword !== rPassword2) {\n            Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\n        }\n\n        dispatch(startRegister(rEmail, rPassword, rName));\n    };\n\n    return (\n        <div className='container login-container'>\n            <div className='row'>\n                <div className='col-md-6 login-form-1'>\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className='mb-3'>\n                            <input\n                                type='email'\n                                className='form-control'\n                                placeholder='Correo'\n                                name='lEmail'\n                                onChange={handleLoginInputChange}\n                                value={lEmail}\n                            />\n                        </div>\n                        <div className='mb-3'>\n                            <input\n                                type='password'\n                                className='form-control'\n                                placeholder='Contraseña'\n                                name='lPassword'\n                                onChange={handleLoginInputChange}\n                                value={lPassword}\n                            />\n                        </div>\n                        <div className='form-group'>\n                            <input type='submit' className='btnSubmit' value='Login' />\n                        </div>\n                    </form>\n                </div>\n\n                <div className='col-md-6 login-form-2'>\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className='mb-3'>\n                            <input\n                                type='text'\n                                className='form-control'\n                                placeholder='Nombre'\n                                onChange={handleRegisterInputChange}\n                                name=\"rName\"\n                                value={rName}\n                            />\n                        </div>\n                        <div className='mb-3'>\n                            <input\n                                type='email'\n                                className='form-control'\n                                placeholder='Correo'\n                                onChange={handleRegisterInputChange}\n                                name=\"rEmail\"\n                                value={rEmail}\n                            />\n                        </div>\n                        <div className='mb-3'>\n                            <input\n                                type='password'\n                                className='form-control'\n                                placeholder='Contraseña'\n                                onChange={handleRegisterInputChange}\n                                name=\"rPassword\"\n                                value={rPassword}\n                            />\n                        </div>\n\n                        <div className='mb-3'>\n                            <input\n                                type='password'\n                                className='form-control'\n                                placeholder='Repita la contraseña'\n                                onChange={handleRegisterInputChange}\n                                name=\"rPassword2\"\n                                value={rPassword2}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <input type='submit' className='btnSubmit' value='Crear cuenta' />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogout } from \"../../actions/auth\";\n\nexport const Navbar = () => {\n\n    const { name } = useSelector(state => state.auth)\n    const dispatch = useDispatch();\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n    return (\n        <div className='navbar navbar-dark bg-dark mb-4'>\n            <span className='navbar-brand ms-3'>{name}</span>\n            <button className='btn btn-outline-danger me-3' onClick={handleLogout}>\n                <i className='fas fa-sign-out-alt'></i> Salir\n            </button>\n        </div>\n    );\n};\n","export const messages = {\n    allDay: \"Todo el día\",\n    previous: \"<\",\n    next: \">\",\n    today: \"Hoy\",\n    month: \"Mes\",\n    week: \"Semana\",\n    day: \"Día\",\n    agenda: \"Agenda\",\n    date: \"Fecha\",\n    time: \"Hora\",\n    event: \"Evento\",\n    noEventsInRange: \"No hay eventos en este rango\",\n    showMore: (total) => `+ Ver más (${total})`,\n};\n","import React from \"react\";\n\nexport const CalendarEvent = ({ event = { title: \"\", user: \"\" } }) => {\n    const { title, user } = event;\n    return (\n        <div>\n            <span>{title} -</span>\n            <strong> {user.name}</strong>\n        </div>\n    );\n};\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal,\n});\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal,\n});\n","import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport Modal from \"react-modal\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport DateTimePicker from \"react-datetime-picker\";\nimport Swal from \"sweetalert2\";\n\nimport \"./modal.css\";\nimport { uiCloseModal } from \"../../actions/ui\";\nimport { eventClearActive, eventStartAddNew, eventStartUpdate } from \"../../actions/events\";\nimport { clearDate } from \"../../actions/dates\";\n\nModal.setAppElement(\"#root\");\n\nconst dateNow = moment().minutes(0).seconds(0).add(1, \"hours\");\nconst dateNowPlus1 = dateNow.clone().add(1, \"hours\");\nconst initEvent = {\n    title: \"\",\n    notes: \"\",\n    start: dateNow.toDate(),\n    end: dateNowPlus1.toDate(),\n};\n\nexport const CalendarModal = () => {\n    // Redux State\n    const { modalOpen } = useSelector((state) => state.ui);\n    const { activeEvent } = useSelector((state) => state.calendar);\n    const dispatch = useDispatch();\n\n    // Input dates form\n    const [, setDateStart] = useState(dateNow.toDate());\n    const [, setDateEnd] = useState(dateNowPlus1.toDate());\n\n    // Date from doubleClick calendar\n    const { activeDate } = useSelector((state) => state.date);\n\n    // Input title\n    const [titleValid, settitleValid] = useState(true);\n\n    // Form values checker\n    const [formValues, setFormValues] = useState(initEvent);\n\n    // Form properties deconstruction\n    const { title, notes, start, end } = formValues;\n\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent);\n        } else {\n            setFormValues(initEvent);\n            if (activeDate) {\n                setFormValues({\n                    ...formValues,\n                    start: activeDate,\n                    end: moment(activeDate).minutes(0).seconds(0).add(1, \"hour\").toDate(),\n                });\n            }\n        }\n    }, [activeEvent, activeDate]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    // Form Submit\n    const handleSubmitForm = (e) => {\n\n        e.preventDefault();\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentEnd.isSameOrBefore(momentStart)) {\n            Swal.fire({\n                title: \"Error!\",\n                text: \"La fecha de fin debe de ser posterior a la fecha de inicio\",\n                icon: \"error\",\n                confirmButtonText: \"Cool\",\n                timer: 2500,\n            });\n            document.querySelector(\".end-date\").classList.add(\"is-invalid\");\n            document.querySelector(\".end-date\").focus();\n            return;\n        }\n        if (title.trim().length < 2) {\n            return settitleValid(false);\n        }\n\n        // If there is an active element => UPDATE Event\n        // If activeEvent === null, It's a new Event\n        if (activeEvent) {\n            dispatch(eventStartUpdate(formValues));\n        } else {\n            dispatch(eventStartAddNew(formValues));\n        }\n        // TODO: Realizar grabación BBDD\n        settitleValid(true);\n        closeModal();\n    };\n\n    const handleInputChange = ({ target }) => {\n        if (target.name === \"title\" && target.value.trim().length >= 2) {\n            settitleValid(true);\n        }\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value,\n        });\n    };\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e,\n        });\n    };\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e,\n        });\n    };\n\n    // Close Form Modal\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n        dispatch(eventClearActive());\n        //setFormValues(initEvent);\n        //setDateStart(dateNow.toDate());\n        //setDateEnd(dateNowPlus1.toDate());\n        setTimeout(() => {\n            dispatch(clearDate());\n        }, 300);\n    };\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            className='modal'\n            onRequestClose={closeModal}\n            contentLabel='Example Modal'\n            closeTimeoutMS={200}\n        >\n            <h1 className='mb-3'>{activeEvent ? \"Editar evento\" : \"Nuevo evento\"}</h1>\n\n            <form className='container' onSubmit={handleSubmitForm}>\n                <div className='mb-3'>\n                    <label className='mb-1'>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        className='form-control start-date'\n                        onChange={handleStartDateChange}\n                        value={start}\n                    />\n                </div>\n\n                <div className='mb-3'>\n                    <label className='mb-1'>Fecha y hora fin</label>\n                    <DateTimePicker\n                        className='form-control end-date'\n                        onChange={handleEndDateChange}\n                        value={end}\n                        minDate={start}\n                    />\n                </div>\n\n                <div className='mb-3 d-flex flex-column justify-content-evenly'>\n                    <label className='mb-1'>Titulo y notas</label>\n                    <input\n                        type='text'\n                        className={`form-control ${!titleValid && \"is-invalid\"}`}\n                        placeholder='Título del evento'\n                        name='title'\n                        autoComplete='off'\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n                    <small id='emailHelp' className='form-text text-muted input-info'>\n                        Una descripción corta\n                    </small>\n                </div>\n\n                <div className='mb-5 d-flex flex-column justify-content-evenly'>\n                    <textarea\n                        type='text'\n                        className='form-control'\n                        placeholder='Notas'\n                        rows='5'\n                        name='notes'\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id='emailHelp' className='form-text text-muted input-info'>\n                        Información adicional\n                    </small>\n                </div>\n\n                <button type='submit' className='btn btn-outline-primary btn-block float-end'>\n                    <i className='far fa-save'></i>\n                    <span> Guardar</span>\n                </button>\n            </form>\n        </Modal>\n    );\n};\n","import { types } from \"../types/types\";\n\nexport const setDate = (date) => ({\n    type: types.dateSet,\n    payload: date,\n});\nexport const clearDate = () => ({\n    type: types.dateClear,\n});\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { eventClearActive } from \"../../actions/events\";\nimport { uiOpenModal } from \"../../actions/ui\";\n\nimport \"./ui.css\";\n\nexport const AddNewFab = () => {\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch(eventClearActive());\n        dispatch(uiOpenModal());\n    };\n\n    return (\n        <button className='btn btn-primary fab' onClick={handleClickNew}>\n            <i className='fas fa-plus'></i>\n        </button>\n    );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { eventStartDeleting } from \"../../actions/events\";\n\nexport const DeleteEventFab = () => {\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch(eventStartDeleting());\n    };\n\n    return (\n        <button\n            className='btn btn-danger fab-danger animate__animated animate__fadeIn'\n            onClick={handleDelete}\n        >\n            <i className='fas fa-trash'></i>\n            <span> Borrar evento</span>\n        </button>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Navbar } from \"../ui/Navbar\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport { messages } from \"../../helpers/calendar-messages-es\";\n\nimport \"moment/locale/es\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { CalendarEvent } from \"./CalendarEvent\";\nimport { CalendarModal } from \"./CalendarModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiOpenModal } from \"../../actions/ui\";\nimport { eventClearActive, eventSetActive, eventStartLoading } from \"../../actions/events\";\nimport { AddNewFab } from \"../ui/AddNewFab\";\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\nimport { setDate } from \"../../actions/dates\";\nmoment.locale(\"es\");\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n    const dispatch = useDispatch();\n    // Get events array from state REDUX\n    const { events, activeEvent } = useSelector((state) => state.calendar);\n    const { uid } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch]);\n\n    // Save last position in localStorage\n    const [lastView, setLastView] = useState(localStorage.getItem(\"lastView\") || \"month\");\n\n    // Open Form Modal\n    const onDoubleClick = (e) => {\n        dispatch(uiOpenModal());\n    };\n    // On click, setActive the event\n    const onSelectEvent = (calendarEvent) => {\n        dispatch(eventSetActive(calendarEvent));\n    };\n    // When the view changes, save the position in localStorage\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem(\"lastView\", e);\n    };\n\n    const onSelectSlot = (e) => {\n        dispatch(eventClearActive());\n        if (e.action !== \"doubleClick\") {\n            return;\n        }\n        const { start } = e;\n\n        dispatch(setDate(start));\n        dispatch(uiOpenModal());\n    };\n\n    // Events style\n    const eventStyleGetter = (event, start, end, isSelected) => {\n\n        const style = {\n            backgroundColor: (uid === event.user._id) ? \"#367CF7\" : \"#465660\",\n            borderRadius: \"0px\",\n            opacity: 0.8,\n            display: \"block\",\n            color: \"white\",\n        };\n        return {\n            style,\n        };\n    };\n\n    return (\n        <div>\n            <Navbar />\n            <div className='container'>\n                <div className='calendar-screen'>\n                    <Calendar\n                        localizer={localizer}\n                        events={events}\n                        startAccessor='start'\n                        endAccessor='end'\n                        messages={messages}\n                        eventPropGetter={eventStyleGetter}\n                        components={{ event: CalendarEvent }}\n                        onDoubleClickEvent={onDoubleClick}\n                        onSelectEvent={onSelectEvent}\n                        onView={onViewChange}\n                        view={lastView}\n                        onSelectSlot={onSelectSlot}\n                        selectable={true}\n                    />\n                </div>\n            </div>\n            <CalendarModal />\n            <AddNewFab />\n            {activeEvent && <DeleteEventFab />}\n        </div>\n    );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n    return (\n        <div>\n            <Route\n                {...rest}\n                component={(props) =>\n                    isAuthenticated ? <Component {...props} /> : <Redirect to='/login' />\n                }\n            />\n        </div>\n    );\n};\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n    return (\n        <div>\n            <Route\n                {...rest}\n                component={(props) =>\n                    !isAuthenticated ? <Component {...props} /> : <Redirect to='/' />\n                }\n            />\n        </div>\n    );\n};\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport { startChecking } from \"../actions/auth\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch]);\n\n    const { checking, uid } = useSelector(state => state.auth)\n\n    if (checking) {\n        return (<h5>Espere</h5>);\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PrivateRoute exact path='/' isAuthenticated={!!uid} component={CalendarScreen} />\n                    <PublicRoute exact path='/login' isAuthenticated={!!uid} component={LoginScreen} />\n                    <Redirect to='/' />\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./store/store\";\nimport { AppRouter } from \"./router/AppRouter\";\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CalendarApp } from \"./CalendarApp\";\nimport \"./styles/styles.css\";\n\nReactDOM.render(<CalendarApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}